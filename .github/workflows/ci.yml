name: CI

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v3 # This action allows caching dependencies and build outputs to improve workflow execution time
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Uses NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - run: npm ci # Similar command to npm install, except it's meant to be used in automated environments

      - run: npm run format

      - run: npm run format:check

      - run: npm test -- --coverage
        env:
          CI: true

      - name: Upload test coveraage
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: coverage
      
      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      
      - name: Upload build folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
      
      - name: ZIP Assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      
      # - uses: actions/download-artifact@v1

      - name: Create a Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Deploy to Staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: npx surge --project ./build --domain abashed-insurance.surge.sh
      
      - name: Deploy to Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx surge --project ./build --domain bashed-insurance.surge.sh
      
      - name: Upload Covarage Report
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}